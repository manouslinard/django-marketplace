- hosts: app01

  vars:
    app_dir: "{{user_dir}}/django-marketplace"
    git_repo_url: "https://github.com/manouslinard/django-marketplace.git"
    git_repo_branch: "ginx-gunicorn"

  tasks:

  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"
    ignore_errors: true

  - name: clone django project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      force: yes
      dest: "{{app_dir}}"
    changed_when: true

  - name: print ip
    debug:
      msg: "ALLOWED_HOSTS={{ansible_all_ipv4_addresses}}"

  - name: add ip in django ALLOWED_HOSTS
    lineinfile:
      dest: "{{app_dir}}/puddle/puddle/settings.py"
      regexp: "^ALLOWED_HOSTS ="
      line: "ALLOWED_HOSTS = {{ansible_all_ipv4_addresses}}"
      state: present

  - name: install and activate virtual environment
    block:
      - name: "APT - install misc packages"
        apt:
          name: [python3, python3-pip, python3-virtualenv, virtualenv]
          update_cache: yes
        become: yes
        become_user: root
        when: hostvars[inventory_hostname].ansible_distribution == 'Ubuntu'
    always:
      - name: setup virtual environment
        pip:
          requirements: "{{app_dir}}/puddle/requirements.txt"
          virtualenv: "{{app_dir}}/myenv"
          virtualenv_python: python3

      - name: make migrations
        django_manage:
          command: "{{ item }}"
          app_path: "{{app_dir}}/puddle"
          virtualenv: "{{app_dir}}/myenv"
        with_items:
          - makemigrations
          - migrate

      - name: copy django service file
        ansible.builtin.template:
          src: "../files/django/gunicorn.service.j2"
          dest: "/etc/systemd/system/gunicorn.service"
        become: yes
        become_user: root

      - name: ensure gunicorn service started
        ansible.builtin.service:
          name: gunicorn
          state: started
          enabled: yes
        become: yes

  - name: install and configure nginx
    block:

    - name: "APT - install nginx"
      apt:
        name: nginx
        update_cache: yes

    - name: copy nginx conf file
      template:
        src: ../files/nginx/demo.nginx.j2
        dest: "/etc/nginx/sites-available/django"

    - name: copy nginx https conf file
      template:
        src: ../files/nginx/demo.https.nginx.j2
        dest: "/etc/nginx/sites-available/djangossl"


    - name: copy certificates
      copy:
        src: "{{item}}"
        dest: /etc/ssl/private/
      with_items:
        - ../files/certs/server.crt
        - ../files/certs/server.key

    - name: fix nginx permissions
      ansible.builtin.file:
        path: /home/vagrant
        mode: ugo+x


    - name: enable django site in nginx
      file:
        src: "/etc/nginx/sites-available/django"
        dest: "/etc/nginx/sites-enabled/django"
        state: link
      notify: restart nginx

    - name: enable djangossl site in nginx
      file:
        src: "/etc/nginx/sites-available/djangossl"
        dest: "/etc/nginx/sites-enabled/djangossl"
        state: link
      notify: restart nginx

    - name: de-activate default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    become: yes
    become_user: root



  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: yes

    - name: restart gunicorn
      service:
        name: gunicorn
        state: restarted
      become: yes
